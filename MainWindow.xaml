<Window x:Class="Notes.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Notes" xmlns:w="clr-namespace:Notes"
        mc:Ignorable="d"
        Title="Notes" Height="480" Width="560">
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewFileCommand"/>
        <CommandBinding Command="Open" Executed="OpenFileCommand"/>
        <CommandBinding Command="Save" Executed="SaveFileCommand"/>
        <CommandBinding Command="SaveAs" Executed="SaveAsCommand"/>
        <CommandBinding Command="Print" Executed="PrintCommand"/>
        <CommandBinding Command="Delete" Executed="DeleteCommand"/>
        <CommandBinding Command="Find" Executed="FindCommand"/>
        <CommandBinding Command="Replace" Executed="ReplaceCommand"/>
        <CommandBinding Command="Help" Executed="HelpCommand"/>
        <CommandBinding Command="w:Commands.Goto" Executed="GotoCommand"/>
        <CommandBinding Command="w:Commands.TimeDate" Executed="TimeDateCommand"/>
        <CommandBinding Command="w:Commands.PageStyling" Executed="PageStylingCommand"/>
        <CommandBinding Command="w:Commands.Font" Executed="FontCommand"/>
        <CommandBinding Command="w:Commands.Status" Executed="StatusCommand"/>
        <CommandBinding Command="w:Commands.About" Executed="AboutCommand"/>
        <CommandBinding Command="w:Commands.Tab" Executed="TabCommand"/>
        <CommandBinding Command="Redo" Executed="DoNothingDefault"/>
        <CommandBinding Command="Undo" Executed="DoNothingDefault"/>
        <CommandBinding Command="Cut" Executed="DoNothingDefault"/>
        <CommandBinding Command="Copy" Executed="DoNothingDefault"/>
        <CommandBinding Command="Paste" Executed="DoNothingDefault"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="New"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="SaveAs"/>
        <KeyBinding Key="G" Modifiers="Ctrl" Command="w:Commands.Goto"/>
        <KeyBinding Key="Tab" Command="w:Commands.Tab"/>
    </Window.InputBindings>
    <Grid>
        <Menu x:Name="menu" Height="20" VerticalAlignment="Top" Margin="0,0,0,0" Style="{DynamicResource MenuStyle1}">
            <MenuItem Header="File" Template="{DynamicResource MenuItemControlTemplate2}">
                <MenuItem Header="New" Command="New" InputGestureText="Ctrl+N" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Open" Command="Open" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Save" Command="Save" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Save As" Command="SaveAs" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <Separator Style="{DynamicResource SeparatorStyle1}"/>
                <MenuItem Header="Page Setup" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Print" Command="Print" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <Separator Style="{DynamicResource SeparatorStyle1}"/>
                <MenuItem Header="Exit" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
            </MenuItem>
            <MenuItem Header="Edit" Template="{DynamicResource MenuItemControlTemplate2}">
                <MenuItem Header="Redo" Command="Redo" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Undo" Command="Undo" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <Separator Style="{DynamicResource SeparatorStyle1}"/>
                <MenuItem Header="Cut" Command="Cut" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Copy" Command="Copy" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Paste" Command="Paste" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Delete" Command="Delete" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <Separator Style="{DynamicResource SeparatorStyle1}"/>
                <MenuItem Header="Find" Command="Find" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Replace" Command="Replace" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Goto" Command="w:Commands.Goto" InputGestureText="Ctrl+G" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <!--Goto: Ctrl-G-->
            </MenuItem>
            <MenuItem Header="Format" Template="{DynamicResource MenuItemControlTemplate2}">
                <MenuItem Header="Page Styling" Command="w:Commands.PageStyling" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Text Styling" Command="w:Commands.Font" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <Separator/>
                <MenuItem Header="Status Bar" Command="w:Commands.Status" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="Time/Date" Command="w:Commands.TimeDate" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
            </MenuItem>
            <MenuItem Header="Help" Template="{DynamicResource MenuItemControlTemplate2}">
                <MenuItem Header="View Help" Command="Help" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
                <MenuItem Header="About Notes" Command="w:Commands.About" Style="{DynamicResource MenuItemStyle1}" Template="{DynamicResource MenuItemControlTemplate1}"/>
            </MenuItem>
        </Menu>
        <TextBox x:Name="textBox" BorderThickness="0" AcceptsReturn="True" Margin="4,20,0.333,15.667" TextWrapping="Wrap" FontFamily="Consolas" VerticalScrollBarVisibility="Visible" Padding="0,4,2,4"/>
        <StatusBar Height="16" Margin="0,0,0.333,-0.333" VerticalAlignment="Bottom"/>
    </Grid>

    <!-- Resources Generated In Blend -->
    <Window.Resources>

        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="ClipToBounds" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="False"/>
            <Setter Property="IsCheckable" Value="False"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="UsesItemContainerTemplate" Value="False"/>
            <Setter Property="OverridesDefaultStyle" Value="False"/>
            <Setter Property="MinWidth" Value="148"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="7"/>
                        <ColumnDefinition/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="0,3.02" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="15.96" Width="Auto"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="2" Margin="0,3.02" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" Height="15.96"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SeparatorStyle1" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="#FFD7D7D7"/>
            <Setter Property="BorderBrush" Value="#FFD7D7D7"/>
            <Setter Property="MinHeight" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="30,0,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="-30,2,0,2"/>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid x:Name="Grid" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2" HorizontalAlignment="Right">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
</Window>
